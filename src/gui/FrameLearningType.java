/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

/**
 *
 * @author BAP1
 */
public class FrameLearningType extends javax.swing.JFrame {

    /**
     * Creates new form JDL
     */
    public FrameLearningType() {
        initComponents();
        initialize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        radio_regression = new javax.swing.JRadioButton();
        radio_classification = new javax.swing.JRadioButton();
        radio_reinforcement = new javax.swing.JRadioButton();
        btn_next = new javax.swing.JButton();
        btn_prev = new javax.swing.JButton();
        radio_gan = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel5.setText("Choose Machine Learning Type");

        buttonGroup1.add(radio_regression);
        radio_regression.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        radio_regression.setText("Regression");
        radio_regression.setEnabled(false);
        radio_regression.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_regressionActionPerformed(evt);
            }
        });

        buttonGroup1.add(radio_classification);
        radio_classification.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        radio_classification.setSelected(true);
        radio_classification.setText("Classification");
        radio_classification.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_classificationActionPerformed(evt);
            }
        });

        buttonGroup1.add(radio_reinforcement);
        radio_reinforcement.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        radio_reinforcement.setText("Reinforcement");
        radio_reinforcement.setEnabled(false);
        radio_reinforcement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_reinforcementActionPerformed(evt);
            }
        });

        btn_next.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        btn_next.setText("Next  -->");
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });

        btn_prev.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        btn_prev.setText("<-- Prev");
        btn_prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_prevActionPerformed(evt);
            }
        });

        buttonGroup1.add(radio_gan);
        radio_gan.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        radio_gan.setText("GAN");
        radio_gan.setEnabled(false);
        radio_gan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_ganActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_prev)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_next))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radio_gan)
                            .addComponent(radio_classification)
                            .addComponent(radio_regression)
                            .addComponent(radio_reinforcement)
                            .addComponent(jLabel5))
                        .addGap(0, 71, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(radio_classification)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radio_regression)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radio_reinforcement)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radio_gan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_next, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_prev, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radio_regressionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_regressionActionPerformed
        Settings.learning_type = enums.EnumLearningType.REGRESSION;
    }//GEN-LAST:event_radio_regressionActionPerformed

    private void btn_prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_prevActionPerformed
        prev();
    }//GEN-LAST:event_btn_prevActionPerformed

    private void radio_classificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_classificationActionPerformed
        Settings.learning_type = enums.EnumLearningType.CLASSIFICATION;
    }//GEN-LAST:event_radio_classificationActionPerformed

    private void radio_reinforcementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_reinforcementActionPerformed
        Settings.learning_type = enums.EnumLearningType.REINFORCEMENT;
    }//GEN-LAST:event_radio_reinforcementActionPerformed

    private void radio_ganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_ganActionPerformed
        Settings.learning_type = enums.EnumLearningType.GAN;
    }//GEN-LAST:event_radio_ganActionPerformed

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        next();
    }//GEN-LAST:event_btn_nextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameLearningType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameLearningType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameLearningType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameLearningType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameLearningType().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_prev;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton radio_classification;
    private javax.swing.JRadioButton radio_gan;
    private javax.swing.JRadioButton radio_regression;
    private javax.swing.JRadioButton radio_reinforcement;
    // End of variables declaration//GEN-END:variables

    private void initialize() {
        if (null != Settings.learning_type) {
            switch (Settings.learning_type) {
                case CLASSIFICATION:
                    radio_classification.setSelected(true);
                    break;
                case REGRESSION:
                    radio_regression.setSelected(true);
                    break;
                case REINFORCEMENT:
                    radio_reinforcement.setSelected(true);
                    break;
                case GAN:
                    radio_gan.setSelected(true);
                    break;
                default:
                    break;
            }
        }
    }

    private void prev() {
        setVisible(false);
        StaticFrames.frmBackend.setVisible(true);
    }

    private void next() {
        setVisible(false);
        StaticFrames.frmLearningMode.setVisible(true);
    }
}
