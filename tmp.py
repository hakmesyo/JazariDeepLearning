#Temporary Script generated by Jazari Deep Learning Framework
import tensorflow.keras
from PIL import Image
import numpy as np
import os
import matplotlib.pyplot as plt
from keras.optimizers import Adam,Adadelta
import timeit
import time
import websocket
import cv2
from websocket_server import WebsocketServer
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
ws=websocket.WebSocket();
ws.connect('ws://127.0.0.1:8887')
class_names = ['Closed','Open']
# Load the model
model = tensorflow.keras.models.load_model(r'D:\Dropbox\NetbeansProjects\JazariDeepLearning\models\keras_model_pistachio.h5')
data = np.ndarray(shape=(1, 224, 224, 3), dtype=np.float32)
def open_camera():
    global nTotal;
    global nOpenSuccess;
    global nClosedSuccess;
    global acc;
    x='open'
    capture=cv2.VideoCapture(0)
    while(True):
        start = timeit.default_timer()
        ret, frame = capture.read()
        cv2.imshow('video', frame)
        image = np.resize(frame,(224, 224,3))
        image_array = np.asarray(image)
        normalized_image_array = (image_array.astype(np.float32) / 127.0) - 1
        # Load the image into the array
        data[0] = normalized_image_array
        # run the inference
        prediction = model.predict(data)
        ws.send('class:'+class_names[np.argmax(prediction)])
        stop = timeit.default_timer()
        if cv2.waitKey(2) == 27:
            ws.send('stop')
            break
    capture.release()
    cv2.destroyAllWindows()
open_camera()
